name: quantum-radar

on:
  schedule:
    - cron: '17 * * * *'   # kjør hver time kl :17
  push:
    branches: [ main, master ]

permissions:
  contents: write

# Hindrer kollisjon når flere runs kjører samtidig
concurrency:
  group: quantum-radar
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Radar
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          SEC_USER_AGENT: ${{ secrets.SEC_USER_AGENT }}
        run: |
          export PYTHONPATH=$PYTHONPATH:.
          python -m src.main

      - name: Commit dashboard data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Hent siste fra remote og rebase lokale endringer
          git fetch origin
          git add docs/data.json docs/signals.json data/state.json || true
          git commit -m "Update radar data [ci skip]" || echo "No changes"

          # Rebase på siste fjern-commit for å unngå 'rejected (fetch first)'
          git pull --rebase origin ${{ github.ref_name }} || true

          # Push til samme branch (main)
          git push origin HEAD:${{ github.ref_name }}
